@import "../_functions.scss";
*,
:after,
:before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
html {
    word-spacing: 1px;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 100%;
}
body {
    color: $body-foreground-color;
    font-size: 62.5%;
}
#wrapper {
    font-size: 1.6em;
    font-family: "Quicksand", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}
.clearfix::after {
    content: "";
    clear: both;
    display: table;
}
.display-inline-block {
    display: inline-block;
}

ul {
    margin: 0;
    padding: 0;
}
.pointer {
    cursor: pointer;
}
ul li {
    list-style-type: none;
}
.container {
    width: 95%;
}

.row {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    margin-top: 5px;
}
.ellipsis {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}
//generate font-weight from 200 to 800
$fw: 100;
@while $fw < 900 {
    .fw-#{$fw} {
        font-weight: #{$fw} !important;
    }
    $fw: $fw + 100;
}
// --------------------------------------------------------------
// generate class for background color ex: 'bg-purple'
// generate class for text color ex: 'color-purple'
@each $name, $value in $colors {
    .fg-#{$name} {
        color: $value;
    }
    .bg-#{$name} {
        background-color: $value;
    }
}
// generate class for text color ex: 'color-purple'
@each $name, $value in $themeColors {
    .theme-fg-#{$name} {
        color: $value;
    }
    .theme-bg-#{$name} {
        background-color: $value;
    }
}
// generate class for border color ex: 'border-purple'
@each $name, $value in $colors {
    .border-#{$name} {
        border-color: $value;
    }
}
@each $name, $value in $themeColors {
    .theme-border-#{$name} {
        border: 1px solid $value;
    }
}
@each $name, $value in $container-max-widths {
    .container-#{$name} {
        width: 98%;
        max-width: $value;
        margin: auto;
    }
}
@each $name, $value in $laptop-columns-widths {
    .#{$name} {
        width: $value;
    }
}
@for $i from 1 through 100 {
    .radius-#{$i} {
        border-radius: #{$i}px !important;
    }
    .fs-#{$i} {
        font-size: #{$i}px !important;
    }
    .m-#{$i} {
        margin: #{$i}px !important;
    }
    .m-t-#{$i} {
        margin-top: #{$i}px !important;
    }
    .m-b-#{$i} {
        margin-bottom: #{$i}px !important;
    }
    .m-l-#{$i} {
        margin-left: #{$i}px !important;
    }
    .m-r-#{$i} {
        margin-right: #{$i}px !important;
    }
    .p-#{$i} {
        padding: #{$i}px !important;
    }
    .p-t-#{$i} {
        padding-top: #{$i}px !important;
    }
    .p-b-#{$i} {
        padding-bottom: #{$i}px !important;
    }
    .p-l-#{$i} {
        padding-left: #{$i}px !important;
    }
    .p-r-#{$i} {
        padding-right: #{$i}px !important;
    }
}
